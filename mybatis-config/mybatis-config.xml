
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">


<!--核心配置文件-->
<configuration>


    <!--  引入外部的配置文件 mysql.properties  -->
    <properties resource="mysql.properties">
        <!--内部配置-->
        <property name="driver" value="com.mysql.cj.jdbc.Driver"/>

        <!--    启动为占位符指定一个默认值    -->
        <property name="org.apache.ibatis.parsing.PropertyParser.enable-default-value"
                  value="true"/>
        <!--    修改默认分割符号  默认为:  -->
        <property name="org.apache.ibatis.parsing.PropertyParser.default-value-separator"
                  value="?:"/> <!-- 修改默认值的分隔符 -->
    </properties>


    <settings>
        <!--日志工厂-->
        <!--STDOUT_LOGGING标准日志输出-->
        <!--        <setting name="logImpl" value="STDOUT_LOGGING"/>        -->
        <setting name="logImpl" value="LOG4J"/>
        <!-- 使全局的映射器启用或禁用缓存。 -->
        <setting name="cacheEnabled" value="true"/>
        <!-- 全局启用或禁用延迟加载。当禁用时，所有关联对象都会即时加载。 -->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!-- 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载。 -->
        <setting name="aggressiveLazyLoading" value="true"/>
        <!-- 是否允许单条sql 返回多个数据集  (取决于驱动的兼容性) default:true -->
        <setting name="multipleResultSetsEnabled" value="true"/>
        <!-- 是否可以使用列的别名 (取决于驱动的兼容性) default:true -->
        <setting name="useColumnLabel" value="true"/>
        <!-- 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。  default:false  -->
        <setting name="useGeneratedKeys" value="true"/>
        <!-- 指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部  -->
        <setting name="autoMappingBehavior" value="PARTIAL"/>
        <!-- 这是默认的执行类型  （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新）  -->
        <setting name="defaultExecutorType" value="SIMPLE"/>
        <!-- 使用驼峰命名法转换字段。 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <!-- 设置本地缓存范围 session:就会有数据的共享  statement:语句范围 (这样就不会有数据的共享 ) defalut:session -->
        <setting name="localCacheScope" value="SESSION"/>
        <!-- 设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER，插入空值时不需要指定类型 -->
        <setting name="jdbcTypeForNull" value="NULL"/>

    </settings>


    <!--类型别名 降低冗余的全限定类名书写-->
    <typeAliases>
        <!--
        Java 类型内建的类型别名
        基本类型      int       _int    ......
        引用数据类型   Integer   integer ......
        -->
        <!--给类起别名            适用于实体类较少     parameterType可以自定义  -->
        <!--  <typeAlias type="pojo.User" alias="user"></typeAlias>-->
        <!--给包起别名 (扫描包)    适用于实体类较多     parameterType默认为类名小写    自定义需要注解:@Alias("user")  -->
        <package name="pojo"/>
    </typeAliases>


    <!--连接数据库环境-->
    <environments default="configuration-1">
        <!--  可以有多套配置环境       通过   default <-> id   的值来控制      每次只能选择一个环境   -->
        <environment id="configuration-1">

            <!-- 事务管理器  { JDBC , MANAGED } JDBC提交事物的回滚与提交 -->
            <transactionManager type="JDBC"/>

            <!-- 数据源   UNPOILED  POOLED  JNDI -->
            <dataSource type="POOLED">   <!--池子-->
                <!--配置的值
                  1.写在当前文件中
                  2.写在properties中property标签中
                  3.利用properties引入外部配置文件
                  4:配置默认值  MyBatis 3.4.2          需要在properties启用这个特性   分割符号可自定义
                 -->
                <property name="driver" value="${driver?:com.mysql.cj.jdbc.Driver}"/>    <!--mysql驱动-->
                <property name="url" value="${url}"/>     <!--连接url-->
                <property name="username" value="${user?:root}"/>    <!--数据库name-->
                <property name="password" value="${password}"/>   <!--数据库密码-->
            </dataSource>

        </environment>

        <environment id="configuration-2">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="com.mysql.cj.jdbc.Driver"/>
                <property name="url"
                          value="jdbc:mysql://localhost:3306/mybatis?useSSL=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=UTC&amp;rewriteBatchedStatements=true"/>
                <property name="username" value="root"/>
                <property name="password" value="bsy8023.00"/>
            </dataSource>
        </environment>

    </environments>


    <!--   数据库厂商标识（databaseIdProvider）  可以根据不同的数据库厂商执行不同的语句   在Mapper.xml文件中配置     databaseId="mysql"  databaseId="oracle"  -->
    <databaseIdProvider type="DB_VENDOR">
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
    </databaseIdProvider>


    <!--映射器 mappers    告诉 MyBatis 到哪里去找映射文件 -->
    <mappers>
        <!--使用相对于类路径的资源引用            注意:必须使用 / -->
        <!--        <mapper resource="dao/serMapper.xml"/>   -->
        <!--使用映射器接口实现类的完全限定类名      注意:接口和mapper配置文件必须同名且在一共包下 -->
        <!--        <mapper class="dao.UserMapper"/>-->
        <!--将包内的映射器接口实现全部注册为映射器   注意:接口和mapper配置文件必须同名且在一共包下 -->
        <package name="dao"/>
    </mappers>

</configuration>


